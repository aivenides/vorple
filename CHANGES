See also the changelog of the Inform 7 extensions
(https://github.com/vorple/inform7/CHANGES).

The numbers after the items refer to GitHub issues. (inform #xx) refers to issue
number xx in the Inform extensions/libraries repositories.


Release 3.1
===========

- BREAKING CHANGE: JavaScript evaluation no longer writes the implicit value of
  the last expression to the return value file. Code must explicitly return a
  value, otherwise the file is left untouched.
- For performance reasons the interpreter now writes the type of the evaluated
  JavaScript expression to a file for Inform to pick up, instead of having the
  Inform extension deduce the type from the value.
- Fixed a bug that prevented a music track from looping if it was started
  when a previous track was already playing
- Added the vorple.audio.pauseBetweenTracks variable to set the duration of the
  pause between tracks in a playlist
- Fixed the return value of debug.off() that was always true but documented to
  be always false
- vorple.requireVersion() returns a boolean that indicates the check status and
  accepts a callback that will be run after the check instead of the default
  one that prints an error message
- Fixed a bug where versions larger than 9 would pass vorple.requireVersion()
  check
- Compatibility with Internet Explorer 11
- Added default audio options that can be set by the user
- Exposed audio.fadeOut() method so that it can be called directly
- Fixed a bug where fading out a sound while another sound was in the middle of
  fading out would stop the other sound's fadeout
- Added a parameter for audio.stopMusic that determines the fadeout duration.
  By extension setting the fadeout duration to 0 stops the music immediately.
- When the result of a JavaScript expression can't be JSON-stringified (e.g. it
  contains a circular reference) the interpreter will no longer throw an error
  and null is returned instead (#32)
- Fixed save/restore (inform7 #4)
- Glk errors thrown by the interpreter are shown in the browser console instead
  of printing them on the screen
- Errors thrown by JavaScript code executed in the story file now show the code
  in the error message (#33)
- JavaScript evaluation now uses new Function() instead of eval() which is
  significantly faster in some browsers
- Audio playlist features have been expanded and partially moved from Inform
  libraries to the JavaScript library
- Fixed command history manipulation methods in Haven, which would cause them to
  manipulate the start of the command history instead of the latest commands


Project
-------

- The code is updated to use latest JavaScript features (ES6) and the build
  process is simplified. The JavaScript library is built with Webpack which
  also handles other build tasks.
- Updated the Git engine to compile with the latest version of Emscripten
  which also drastically reduced the size of the resulting JavaScript file
- Automated testing has been rewritten using Webdriver.io and Selenium
- Added documentation for how to get development environment for Vorple itself
  and its tests installed and running
- Vorple is published in nmp: https://www.npmjs.com/package/vorple
- Added a Code of Conduct to the project


Release 3.0 preview (2017-04-29)
================================

Version 3 is a complete rewrite. Instead of Parchment, it's built on top of
Git (https://github.com/DavidKinder/Git) and CheapGlk
(https://github.com/erkyrath/cheapglk) that have been compiled to JavaScript
(https://github.com/vorple/Git and https://github.com/vorple/cheapglk).
The frontend uses Haven (https://github.com/vorple/haven).

The API has changed completely, so individual changes are not specified here.

Version 3 doesn't directly support Undum anymore. With Undum please use
version 2.5.


Libraries
---------

- Replaced the notification/modal library Noty with Toastr and Vex
- Replaced the tooltip library qTip2 with PowerTip
- Added the Flexboxgrid library
- Updated jQuery to 3.1.1


Project
-------

- Inform extensions are split into a separate repository, so dual-licensing
  the entire project isn't necessary anymore: the JavaScript library is now
  using the MIT license and the Inform 7 extensions use the CC-BY license.